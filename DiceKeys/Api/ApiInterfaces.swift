// Auto-generated by dicekeys-api-js/cross-compiling/generate-swift.ts
// Generated on Sat, 14 Nov 2020 23:22:48 GMT

enum ApiCommand: String, Codable, CaseIterable  {
    case generateSignature
    case getPassword
    case getSealingKey
    case getSecret
    case getSigningKey
    case getSignatureVerificationKey
    case getSymmetricKey
    case getUnsealingKey
    case sealWithSymmetricKey
    case unsealWithSymmetricKey
    case unsealWithUnsealingKey
}

enum ApiMetaCommand: String, Codable, CaseIterable {
    case getAuthToken
}

enum Request {
    case generateSignature(derivationOptionsJson: String, message: String)
    case getPassword(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String)
    case getSealingKey(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String)
    case getSecret(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String)
    case getSigningKey(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String)
    case getSignatureVerificationKey(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String)
    case getSymmetricKey(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String)
    case getUnsealingKey(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String)
    case sealWithSymmetricKey(derivationOptionsJson: String, derivationOptionsJsonMayBeModified: String, plaintext: String, unsealingInstructions: String)
    case unsealWithSymmetricKey(packagedSealedMessageJson: String)
    case unsealWithUnsealingKey(packagedSealedMessageJson: String)
}

enum MetaInputs: String, Codable, CaseIterable {
    case command
    case requestId
}

enum UrlMetaInputs: String, Codable {
    case authToken
    case respondTo
}

enum SuccessResponse {
    case generateSignature(signature: String, signatureVerificationKeyJson: String)
    case getPassword(passwordJson: String)
    case getSealingKey(sealingKeyJson: String)
    case getSecret(secretJson: String)
    case getSigningKey(signingKeyJson: String)
    case getSignatureVerificationKey(signatureVerificationKeyJson: String)
    case getSymmetricKey(symmetricKeyJson: String)
    case getUnsealingKey(unsealingKeyJson: String)
    case sealWithSymmetricKey(packagedSealedMessageJson: String)
    case unsealWithSymmetricKey(plaintext: String)
    case unsealWithUnsealingKey(plaintext: String)
}

enum MetaOutput: String, Codable, CaseIterable {
    case requestId
}

enum ExceptionMetaOutput: String, Codable, CaseIterable {
    case exception
    case message
    case stack
}
